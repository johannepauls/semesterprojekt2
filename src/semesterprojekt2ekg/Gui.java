package semesterprojekt2ekg;


import java.awt.*;
import static java.awt.Color.*;


public class Gui extends javax.swing.JPanel {

    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        statiskEkgButton = new javax.swing.JButton();
        bpmtxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(255, 255, 255));

        startButton.setBackground(new java.awt.Color(153, 153, 153));
        startButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        startButton.setForeground(new java.awt.Color(255, 255, 255));
        startButton.setText("Påbegynd undersøgelse");
        startButton.setActionCommand("start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stopButton.setBackground(new java.awt.Color(153, 153, 153));
        stopButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        stopButton.setForeground(new java.awt.Color(255, 255, 255));
        stopButton.setActionCommand("stop");
        stopButton.setLabel("Afslut undersøgelse");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        statiskEkgButton.setBackground(new java.awt.Color(153, 153, 153));
        statiskEkgButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        statiskEkgButton.setForeground(new java.awt.Color(255, 255, 255));
        statiskEkgButton.setText("Tidligere EKG");
        statiskEkgButton.setActionCommand("statisk");
        statiskEkgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statiskEkgButtonActionPerformed(evt);
            }
        });

        bpmtxt.setEditable(false);
        bpmtxt.setBackground(new java.awt.Color(0, 0, 0));
        bpmtxt.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        bpmtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpmtxtActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("BPM");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(bpmtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 372, Short.MAX_VALUE)
                .addComponent(statiskEkgButton, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(153, 153, 153)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stopButton, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
                .addGap(63, 63, 63))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(543, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(statiskEkgButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bpmtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startButtonActionPerformed

    private void statiskEkgButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statiskEkgButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statiskEkgButtonActionPerformed

    private void bpmtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpmtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bpmtxtActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stopButtonActionPerformed

    public void setPuls(){
        //ændre puls på GUI
    }
    
    public void getInterval(){
        //læser interval brugeren ønsker at tegne statisk graf over
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bpmtxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton startButton;
    private javax.swing.JButton statiskEkgButton;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables

    @Override
 protected void paintComponent (Graphics g){
  super.paintComponent(g);
  
  
  // Ruminddeling
        g.setColor(white); 
        
        // Vandret hvid linje.
        g.fillRect(0, 515, 1320, 2);
        // Lodret hvid linje.
        g.fillRect(650, 515, 2, 240);
        
  // Grid  
        
        //Lyst rektangel
        g.setColor(darkGray); 
        g.drawRect(35, 65, 1230, 340);
        
        g.setColor(lightGray); 
        int yo1 = 65;
        int yo2 = 75;
        int xos = 123+35;
        int xod = 123;
        
        
        
        //Korte mørke streger oppe.
        g.drawLine(xos +(0*xod), yo1, xos +(0*xod), yo2);
        g.drawLine(xos +(1*xod), yo1, xos +(1*xod), yo2);
        g.drawLine(xos +(2*xod), yo1, xos +(2*xod), yo2);
        g.drawLine(xos +(3*xod), yo1, xos +(3*xod), yo2);
        g.drawLine(xos +(4*xod), yo1, xos +(4*xod), yo2);
        g.drawLine(xos +(5*xod), yo1, xos +(5*xod), yo2);
        g.drawLine(xos +(6*xod), yo1, xos +(6*xod), yo2);
        g.drawLine(xos +(7*xod), yo1, xos +(7*xod), yo2);
        g.drawLine(xos +(8*xod), yo1, xos +(8*xod), yo2);
        
        int yn1 = 395;
        int yn2 = 405;
        
        
        //Korte mørke streger nede.
        g.drawLine(xos +(0*xod), yn1, xos +(0*xod), yn2);
        g.drawLine(xos +(1*xod), yn1, xos +(1*xod), yn2);
        g.drawLine(xos +(2*xod), yn1, xos +(2*xod), yn2);
        g.drawLine(xos +(3*xod), yn1, xos +(3*xod), yn2);
        g.drawLine(xos +(4*xod), yn1, xos +(4*xod), yn2);
        g.drawLine(xos +(5*xod), yn1, xos +(5*xod), yn2);
        g.drawLine(xos +(6*xod), yn1, xos +(6*xod), yn2);
        g.drawLine(xos +(7*xod), yn1, xos +(7*xod), yn2);
        g.drawLine(xos +(8*xod), yn1, xos +(8*xod), yn2);
        
        int xl1 = 35;
        int xl2 = 45;
        
        //Korte mørke streger venstre.
        g.drawLine(xl1, 99, xl2, 99);
        g.drawLine(xl1, 133, xl2, 133);
        g.drawLine(xl1, 167, xl2, 167);
        g.drawLine(xl1, 201, xl2, 201);
        g.drawLine(xl1, 235, xl2, 235);
        g.drawLine(xl1, 269, xl2, 269);
        g.drawLine(xl1, 303, xl2, 303);
        g.drawLine(xl1, 337, xl2, 337);
        g.drawLine(xl1, 371, xl2, 371);
        
        int xr1 = 1255;
        int xr2 = 1265;
        int xrs = 99;
        int xrd = 34;
        
        //Korte mørke streger højre.
        g.drawLine(xr1, xrs +(0*xrd), xr2, xrs +(0*xrd));
        g.drawLine(xr1, xrs +(1*xrd), xr2, xrs +(1*xrd));
        g.drawLine(xr1, xrs +(2*xrd), xr2, xrs +(2*xrd));
        g.drawLine(xr1, xrs +(3*xrd), xr2, xrs +(3*xrd));
        g.drawLine(xr1, xrs +(4*xrd), xr2, xrs +(4*xrd));
        g.drawLine(xr1, xrs +(5*xrd), xr2, xrs +(5*xrd));
        g.drawLine(xr1, xrs +(6*xrd), xr2, xrs +(6*xrd));
        g.drawLine(xr1, xrs +(7*xrd), xr2, xrs +(7*xrd));
        g.drawLine(xr1, xrs +(8*xrd), xr2, xrs +(8*xrd));
        
        int xh1 = 45;
        int xh2 = 1254;
        
        g.setColor(darkGray); 

        //Lange lyse horisontale streger
        g.drawLine(xh1, xrs +(0*xrd), xh2, xrs +(0*xrd));
        g.drawLine(xh1, xrs +(1*xrd), xh2, xrs +(1*xrd));
        g.drawLine(xh1, xrs +(2*xrd), xh2, xrs +(2*xrd));
        g.drawLine(xh1, xrs +(3*xrd), xh2, xrs +(3*xrd));
        g.drawLine(xh1, xrs +(4*xrd), xh2, xrs +(4*xrd));
        g.drawLine(xh1, xrs +(5*xrd), xh2, xrs +(5*xrd));
        g.drawLine(xh1, xrs +(6*xrd), xh2, xrs +(6*xrd));
        g.drawLine(xh1, xrs +(7*xrd), xh2, xrs +(7*xrd));
        g.drawLine(xh1, xrs +(8*xrd), xh2, xrs +(8*xrd));
        
        int xv1 = 75;
        int xv2 = 395;
        
        //Lange lyse vertikale streger
        g.drawLine(xos +(0*xod), xv1, xos +(0*xod), xv2);
        g.drawLine(xos +(1*xod), xv1, xos +(1*xod), xv2);
        g.drawLine(xos +(2*xod), xv1, xos +(2*xod), xv2);
        g.drawLine(xos +(3*xod), xv1, xos +(3*xod), xv2);
        g.drawLine(xos +(4*xod), xv1, xos +(4*xod), xv2);
        g.drawLine(xos +(5*xod), xv1, xos +(5*xod), xv2);
        g.drawLine(xos +(6*xod), xv1, xos +(6*xod), xv2);
        g.drawLine(xos +(7*xod), xv1, xos +(7*xod), xv2);
        g.drawLine(xos +(8*xod), xv1, xos +(8*xod), xv2);
 }
}
